pipeline {
    agent { 
        docker{
            dockerfile true 
            args '-v $HOME/.m2:/root/.m2'
        }
    }
    stages {
		stage('Unit Tests') {
            steps{
                sh 'mvn -f maths/pom.xml clean test'
            }
        }
        
    //    stage("sonar_static_check"){
    //        steps{
	//	withSonarQubeEnv('MySonarQube') {
    //                // Optionally use a Maven environment you've configured already
    //                sh 'mvn -f maths/pom.xml clean sonar:sonar -Dmaven.test.skip=true'
    //            }
    //        }
//
    //    }
	//
	//stage("Quality Gate") {
    //        steps {
    //            timeout(time: 2, unit: 'MINUTES') {
    //                // Parameter indicates whether to set pipeline to UNSTABLE if Quality Gate fails
    //                // true = set pipeline to UNSTABLE, false = don't
    //                waitForQualityGate abortPipeline: true
    //            }
    //        }
    //    }

		
        stage ('Artifactory configuration') {
            steps {
                rtServer (
                    id: "Artifactory",
                    url: "http://192.168.0.106:8082/artifactory",
		            credentialsId: 'admin.jfrog'
                )

                rtMavenDeployer (
                    id: "MAVEN_DEPLOYER",
                    serverId: "http://192.168.0.106:8082/artifactory",
                    releaseRepo: "libs-release-local",
                    snapshotRepo: "libs-snapshot-local"
                )

                rtMavenResolver (
                    id: "MAVEN_RESOLVER",
                    serverId: "http://192.168.0.106:8082/artifactory",
                    releaseRepo: "libs-release",
                    snapshotRepo: "libs-snapshot"
                )
            }
        }

        stage ('Build & Upload Artifact') {
            steps {
                rtMavenRun (
                    tool: "maven3.6", // Tool name from Jenkins configuration
                    pom: 'maths/pom.xml',
                    goals: 'clean install -Dmaven.test.skip=true',
                    deployerId: "MAVEN_DEPLOYER",
                    resolverId: "MAVEN_RESOLVER"
                )
            }
        }

        stage ('Publish build info') {
            steps {
                rtPublishBuildInfo (
                    serverId: "Artifactory"
                )
            }
        }
    }
}